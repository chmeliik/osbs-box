- name: Generate certificates for OSBS-Box
  hosts: osbs_box_host
  tags:
    - certificates

  tasks:
    - name: Make sure certificate directories exist
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ certificates_dir }}"
        - "{{ koji_certs_dir }}"
        - "{{ registry_certs_dir }}"

    - name: Generate certificates
      include_tasks: tasks/generate-certs.yaml


- name: Prepare for deployment of openshift applications
  hosts: osbs_box_host
  tags:
    - koji
    - registry
    - namespaces
    - buildroot
    # One tag for all openshift applications
    - openshift

  tasks:
    - name: Login as openshift admin
      command: oc login -u system:admin
      changed_when: true

    - name: Make "{{ openshift_user }}" an openshift cluster admin
      command: oc adm policy add-cluster-role-to-user
                  cluster-admin "{{ openshift_user }}"
      changed_when: true

    - name: Make sure directory for openshift files exists
      file:
        path: "{{ openshift_files }}"
        state: directory

    - name: Process parameters file and put it in openshift files dir
      template:
        src: openshift/params/osbs-box.env.j2
        dest: "{{ openshift_files }}/osbs-box.env"


- name: Run koji containers on openshift
  hosts: osbs_box_host
  gather_facts: false
  tags:
    - koji
    - openshift

  tasks:
    - name: Copy koji openshift templates to openshift files dir
      copy:
        src: "openshift/templates/{{ item }}.yaml"
        dest: "{{ openshift_files }}/{{ item }}.yaml"
      loop:
        - koji-volumes
        - koji-base
        - koji-client
        - koji-builder
        - koji-db
        - koji-hub

    - name: Process koji config templates, output in openshift files dir
      template:
        src: "openshift/configs/{{ item }}.j2"
        dest: "{{ openshift_files }}/{{ item }}"
      loop:
        - koji-builder-osbs.conf
        - koji-hub-web.conf

    - name: Set up directories that will serve as backing storage for koji PVs
      file:
        path: "{{ item }}"
        state: directory
        setype: container_file_t
      loop:
        - "{{ koji_files_dir }}"
        - "{{ koji_db_data_dir }}"

    - name: Set up koji namespace
      include_tasks: tasks/setup-namespace.yaml
      vars:
        name: "{{ koji_namespace }}"
        anyuid: true
        templates:
          - "{{ openshift_files }}/koji-volumes.yaml"
          - "{{ openshift_files }}/koji-base.yaml"
          - "{{ openshift_files }}/koji-client.yaml"
          - "{{ openshift_files }}/koji-builder.yaml"
          - "{{ openshift_files }}/koji-db.yaml"
          - "{{ openshift_files }}/koji-hub.yaml"
        param_file: "{{ openshift_files }}/osbs-box.env"
        config_maps:
          - name: koji-builder-osbs
            files:
              - src: "{{ openshift_files }}/koji-builder-osbs.conf"
                dest: osbs.conf
          - name: koji-hub-web
            files:
              - src: "{{ openshift_files }}/koji-hub-web.conf"
                dest: web.conf
        secrets:
          - name: koji-certs
            files:
              - src: "{{ certificates_dir }}/osbs-box-ca.crt"
              - src: "{{ koji_certs_dir }}/koji-hub.crt"
              - src: "{{ koji_certs_dir }}/koji-hub.key"
              - src: "{{ koji_certs_dir }}/kojiweb.pem"
              - src: "{{ koji_certs_dir }}/kojibuilder.pem"
              - src: "{{ koji_certs_dir }}/kojiadmin.pem"
              - src: "{{ koji_certs_dir }}/kojiosbs.pem"

    - name: Build (and automatically deploy) koji components
      command: oc --namespace "{{ koji_namespace }}" start-build koji-base
      changed_when: true


- name: Run registry container on openshift
  hosts: osbs_box_host
  gather_facts: false
  tags:
    - registry
    - openshift

  tasks:
    - name: Copy osbs-registry template to openshift files dir
      copy:
        src: openshift/templates/osbs-registry.yaml
        dest: "{{ openshift_files }}/osbs-registry.yaml"

    - name: Set up directory for registry PV storage
      file:
        path: "{{ registry_data_dir }}"
        state: directory
        setype: container_file_t

    - name: Set up OSBS registry namespace
      include_tasks: tasks/setup-namespace.yaml
      vars:
        name: "{{ registry_namespace }}"
        anyuid: true
        templates:
          - "{{ openshift_files }}/osbs-registry.yaml"
        param_file: "{{ openshift_files }}/osbs-box.env"
        secrets:
          - name: registry-cert
            files:
              - src: "{{ registry_certs_dir }}/osbs-registry.crt"
              - src: "{{ registry_certs_dir }}/osbs-registry.key"


- name: Set up OSBS orchestrator and worker namespaces
  hosts: osbs_box_host
  gather_facts: false
  tags:
    - namespaces
    - openshift

  tasks:
    - name: Query openshift for osbs-registry IP
      command: oc --namespace "{{ registry_namespace }}" get svc osbs-registry
                  --output 'jsonpath={ .spec.clusterIP }'
      register: registry_ip_query
      changed_when: false

    - name: Process orchestrator config templates, output in openshift files dir
      template:
        src: "openshift/configs/{{ item }}.j2"
        dest: "{{ openshift_files }}/{{ item }}"
      loop:
        - reactor-config-map.yaml
        - client-config-secret.conf
      vars:
        registry_ip: "{{ registry_ip_query.stdout }}"

    - name: Set up orchestrator namespace
      include_tasks: tasks/setup-namespace.yaml
      vars:
        name: "{{ orchestrator_namespace }}"
        config_maps:
          - name: reactor-config-map
            files:
              - src: "{{ openshift_files }}/reactor-config-map.yaml"
                dest: config.yaml
        secrets:
          - name: client-config-secret
            files:
              - src: "{{ openshift_files }}/client-config-secret.conf"
                dest: osbs.conf
          - name: kojisecret
            files:
              - src: "{{ koji_certs_dir }}/kojiosbs.pem"
                dest: cert
              - src: "{{ certificates_dir }}/osbs-box-ca.crt"
                dest: ca
              - src: "{{ certificates_dir }}/osbs-box-ca.crt"
                dest: serverca

    - name: Set up worker namespace
      include_tasks: tasks/setup-namespace.yaml
      vars:
        name: "{{ worker_namespace }}"
        secrets:
          - name: kojisecret
            files:
              - src: "{{ koji_certs_dir }}/kojiosbs.pem"
                dest: cert
              - src: "{{ certificates_dir }}/osbs-box-ca.crt"
                dest: ca
              - src: "{{ certificates_dir }}/osbs-box-ca.crt"
                dest: serverca

    - name: Add necessary roles to builder serviceaccounts
      command: oc --namespace "{{ item.0 }}" adm policy
                  add-role-to-user "{{ item.1 }}" -z builder
      changed_when: true
      loop:
        "{{ namespaces | product(roles) | list }}"
      vars:
        namespaces:
          - "{{ orchestrator_namespace }}"
          - "{{ worker_namespace }}"
        roles:
          - "edit"
          - "system:build-strategy-custom"


- name: Build OSBS buildroot
  hosts: osbs_box_host
  gather_facts: false
  tags:
    - buildroot
    - openshift

  tasks:
    - name: Copy osbs-buildroot template to openshift files dir
      copy:
        src: openshift/templates/osbs-buildroot.yaml
        dest: "{{ openshift_files }}/osbs-buildroot.yaml"

    - name: Create openshift resources for osbs-buildroot
      shell:
        set -o pipefail;
        oc process -f "{{ openshift_files }}/osbs-buildroot.yaml"
                   --param-file "{{ openshift_files }}/osbs-box.env"
                   --ignore-unknown-parameters |
        oc --namespace "{{ orchestrator_namespace }}" apply -f -
      changed_when: true

    - name: Build osbs-buildroot
      command: oc --namespace "{{ orchestrator_namespace }}"
                  start-build osbs-buildroot
      changed_when: true
